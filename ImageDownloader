package discord.GrandArchiver;

import java.io.OutputStream;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;

public class ImageDownloader implements Runnable {
	private String url;
	private String directory;
	private int fileNumber;

	public ImageDownloader(String url, int fileNumber) {
		this.url = url;
		this.fileNumber = fileNumber;
		directory = Main.directory + "\\" + fileNumber + getDirectoryType();
	}

	// Helper Method
	private String getDirectoryType() {
		for (int i = url.length() - 1; i > 0; i--) {
			if (url.substring(i, i + 1).equals(".")) {
				return (url.substring(i));
			}
		}
		return "";
	}

	// Main
	public void run() {
		InputStream inputStream = null;
		OutputStream outputStream = null;
		BufferedOutputStream bOutputStream = null;

		try {
			URL url = new URL(this.url);
			String USER_AGENT = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36";
			URLConnection con = url.openConnection();
			con.setRequestProperty("User-Agent", USER_AGENT);
			inputStream = con.getInputStream();
			outputStream = new FileOutputStream(directory);
			bOutputStream = new BufferedOutputStream(outputStream);
			
			byte[] buffer = new byte[4096];
			int length;
			while ((length = inputStream.read(buffer)) != -1) {
				bOutputStream.write(buffer, 0, length);
			}
			
		} catch (Exception ex) {
			System.out.println("File number " + fileNumber + " failed.");
		}
		try {
			outputStream.close();
			inputStream.close();
		} catch (Exception e) {

		}
	}
}
